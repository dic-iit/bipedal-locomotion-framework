<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="309pt" height="626pt"
 viewBox="0.00 0.00 309.00 626.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 622)">
<title>Graphical Class Hierarchy</title>
<!-- Node0 -->
<g id="node1" class="node">
<title>Node0</title>
<g id="a_node1"><a xlink:href="https://en.cppreference.com/w/cpp/types/integral_constant.html" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-288 0,-307 77,-307 77,-288 0,-288"/>
<text text-anchor="middle" x="38.5" y="-295" font-family="Helvetica,sans-Serif" font-size="10.00">std::true_type</text>
</a>
</g>
</g>
<!-- Node1 -->
<g id="node2" class="node">
<title>Node1</title>
<g id="a_node2"><a xlink:href="structBipedalLocomotion_1_1GenericContainer_1_1is__span__constructible_3_01Class_00_01typename_075ffca013f10d11599823b4dea1e9407.html" target="_top" xlink:title="is_span_constructible is a utility metafunction to check if iDynTree::Span is constructible given a r...">
<polygon fill="none" stroke="black" points="113,-521.5 113,-617.5 301,-617.5 301,-521.5 113,-521.5"/>
<text text-anchor="start" x="121" y="-605.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="121" y="-594.5" font-family="Helvetica,sans-Serif" font-size="10.00">GenericContainer::is</text>
<text text-anchor="start" x="121" y="-583.5" font-family="Helvetica,sans-Serif" font-size="10.00">_span_constructible&lt;</text>
<text text-anchor="start" x="121" y="-572.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Class, typename std::</text>
<text text-anchor="start" x="121" y="-561.5" font-family="Helvetica,sans-Serif" font-size="10.00">enable_if&lt; std::is_constructible</text>
<text text-anchor="start" x="121" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; iDynTree::Span&lt; typename container</text>
<text text-anchor="start" x="121" y="-539.5" font-family="Helvetica,sans-Serif" font-size="10.00">_data&lt; Class &gt;::type &gt;, Class &amp; &gt;</text>
<text text-anchor="middle" x="207" y="-528.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value &gt;::type &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node0&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M41.81,-317.26C47.43,-357.71 65.04,-451.21 113,-511.5 115.72,-514.92 118.71,-518.2 121.89,-521.33"/>
<polygon fill="midnightblue" stroke="midnightblue" points="45.25,-316.59 40.51,-307.12 38.31,-317.49 45.25,-316.59"/>
</g>
<!-- Node2 -->
<g id="node3" class="node">
<title>Node2</title>
<g id="a_node3"><a xlink:href="structBipedalLocomotion_1_1GenericContainer_1_1is__vector_3_01Vector_3_01T_01_4_01_4.html" target="_top" xlink:title="is_vector is a utility metafunction used to check if T is a GenericContainer::Vector.">
<polygon fill="none" stroke="black" points="147.5,-461 147.5,-502 266.5,-502 266.5,-461 147.5,-461"/>
<text text-anchor="start" x="155.5" y="-490" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="155.5" y="-479" font-family="Helvetica,sans-Serif" font-size="10.00">GenericContainer::is</text>
<text text-anchor="middle" x="207" y="-468" font-family="Helvetica,sans-Serif" font-size="10.00">_vector&lt; Vector&lt; T &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node0&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M43.56,-317.1C51.31,-349.69 71.32,-415.03 113,-451.5 122.7,-459.99 134.84,-466.08 147.12,-470.45"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.91,-316.04 41.31,-307.04 40.08,-317.57 46.91,-316.04"/>
</g>
<!-- Node3 -->
<g id="node4" class="node">
<title>Node3</title>
<g id="a_node4"><a xlink:href="structBipedalLocomotion_1_1has__square__bracket__operator_3_01T_00_01void__t_3_01decltype_07std_8a0c2bf9f1f70e604c7a6793700f89fd.html" target="_top" xlink:title="has_square_bracket_operator is used to build a type&#45;dependent expression that check if an element has...">
<polygon fill="none" stroke="black" points="134.5,-379 134.5,-442 279.5,-442 279.5,-379 134.5,-379"/>
<text text-anchor="start" x="142.5" y="-430" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="142.5" y="-419" font-family="Helvetica,sans-Serif" font-size="10.00">has_square_bracket_operator</text>
<text text-anchor="start" x="142.5" y="-408" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, void_t&lt; decltype(std</text>
<text text-anchor="start" x="142.5" y="-397" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()[std::declval</text>
<text text-anchor="middle" x="207" y="-386" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; int &gt;()])&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node0&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M54.02,-314.95C67.89,-330.78 90.04,-353.95 113,-369.5 119.72,-374.05 127.03,-378.29 134.5,-382.18"/>
<polygon fill="midnightblue" stroke="midnightblue" points="56.38,-312.32 47.21,-307.01 51.06,-316.88 56.38,-312.32"/>
</g>
<!-- Node4 -->
<g id="node5" class="node">
<title>Node4</title>
<g id="a_node5"><a xlink:href="structBipedalLocomotion_1_1has__type__member_3_01T_00_01void__t_3_01typename_01T_1_1value__type_01_4_01_4.html" target="_top" xlink:title="has_type_member is a utility metafunction to detect if typename T defines value_type&lt;">
<polygon fill="none" stroke="black" points="150.5,-307.5 150.5,-359.5 263.5,-359.5 263.5,-307.5 150.5,-307.5"/>
<text text-anchor="start" x="158.5" y="-347.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="158.5" y="-336.5" font-family="Helvetica,sans-Serif" font-size="10.00">has_type_member&lt; T,</text>
<text text-anchor="start" x="158.5" y="-325.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; typename T::</text>
<text text-anchor="middle" x="207" y="-314.5" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node0&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M87.25,-307.83C106.95,-312.08 129.91,-317.05 150.36,-321.47"/>
<polygon fill="midnightblue" stroke="midnightblue" points="87.8,-304.36 77.28,-305.67 86.32,-311.2 87.8,-304.36"/>
</g>
<!-- Node5 -->
<g id="node6" class="node">
<title>Node5</title>
<g id="a_node6"><a xlink:href="structBipedalLocomotion_1_1is__data__available_3_01T_00_01void__t_3_01decltype_07std_1_1declval_e2c355f23b76c51122c965048e9aff0f.html" target="_top" xlink:title="is_data_available is a utility metafunction to detect if typename T contains the data()&lt;">
<polygon fill="none" stroke="black" points="142.5,-236.5 142.5,-288.5 271.5,-288.5 271.5,-236.5 142.5,-236.5"/>
<text text-anchor="start" x="150.5" y="-276.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="150.5" y="-265.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_data_available&lt; T,</text>
<text text-anchor="start" x="150.5" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; decltype(std</text>
<text text-anchor="middle" x="207" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;().data())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node0&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M87.07,-287.5C104.24,-283.89 123.91,-279.76 142.24,-275.9"/>
<polygon fill="midnightblue" stroke="midnightblue" points="86.35,-284.08 77.28,-289.56 87.79,-290.93 86.35,-284.08"/>
</g>
<!-- Node6 -->
<g id="node7" class="node">
<title>Node6</title>
<g id="a_node7"><a xlink:href="structBipedalLocomotion_1_1is__iterable_3_01T_00_01void__t_3_01decltype_07std_1_1declval_3_01T_0b7c4298ccd943ffa7636ecb5c7dbb6f6.html" target="_top" xlink:title="Implementation of the c++17 void_t&lt;.">
<polygon fill="none" stroke="black" points="135.5,-154 135.5,-217 278.5,-217 278.5,-154 135.5,-154"/>
<text text-anchor="start" x="143.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="143.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">is_iterable&lt; T, void</text>
<text text-anchor="start" x="143.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(std::declval</text>
<text text-anchor="start" x="143.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;().begin()), decltype</text>
<text text-anchor="middle" x="207" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;().end())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node0&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M54.61,-280.11C68.59,-264.78 90.55,-242.61 113,-227.5 119.91,-222.85 127.41,-218.49 135.06,-214.47"/>
<polygon fill="midnightblue" stroke="midnightblue" points="51.76,-278.04 47.71,-287.82 56.98,-282.7 51.76,-278.04"/>
</g>
<!-- Node7 -->
<g id="node8" class="node">
<title>Node7</title>
<g id="a_node8"><a xlink:href="structBipedalLocomotion_1_1is__resizable_3_01T_00_01void__t_3_01decltype_07std_1_1declval_3_01T_1c3fd0b8ee07ddf485f95562f4b7435c.html" target="_top" xlink:title="is_resizable is used to build a type&#45;dependent expression that check if an element is resizable (i....">
<polygon fill="none" stroke="black" points="142.5,-72 142.5,-135 271.5,-135 271.5,-72 142.5,-72"/>
<text text-anchor="start" x="150.5" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="150.5" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00">is_resizable&lt; T, void</text>
<text text-anchor="start" x="150.5" y="-101" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(std::declval</text>
<text text-anchor="start" x="150.5" y="-90" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;().resize(std::declval</text>
<text text-anchor="middle" x="207" y="-79" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; int &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node0&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M44.14,-278.02C52.65,-246.16 73.6,-182.63 113,-144.5 121.37,-136.4 131.6,-129.75 142.19,-124.35"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.7,-277.32 41.64,-287.88 47.49,-279.04 40.7,-277.32"/>
</g>
<!-- Node8 -->
<g id="node9" class="node">
<title>Node8</title>
<g id="a_node9"><a xlink:href="structBipedalLocomotion_1_1is__size__available_3_01T_00_01void__t_3_01decltype_07std_1_1declval_b4934191254068a1705a6471e404cc79.html" target="_top" xlink:title="is_size_available is a utility metafunction to detect if typename T contains the size()&lt;">
<polygon fill="none" stroke="black" points="143,-0.5 143,-52.5 271,-52.5 271,-0.5 143,-0.5"/>
<text text-anchor="start" x="151" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="151" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_size_available&lt; T,</text>
<text text-anchor="start" x="151" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; decltype(std</text>
<text text-anchor="middle" x="207" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;().size())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node0&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M40.14,-277.39C42.63,-232.83 54.69,-124.8 113,-62.5 121.16,-53.78 131.68,-47.14 142.69,-42.1"/>
<polygon fill="midnightblue" stroke="midnightblue" points="36.64,-277.37 39.68,-287.52 43.63,-277.68 36.64,-277.37"/>
</g>
</g>
</svg>
